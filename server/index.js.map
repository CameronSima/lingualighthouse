{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:/Users/cameronsima/dev/yt_search_remix/node_modules/@remix-run/css-bundle/dist/index.js", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/notes.$noteId.tsx", "../app/models/note.server.ts", "../app/routes/notes._index.tsx", "../app/routes/notes.new.tsx", "../app/routes/channel.tsx", "../app/search.server.ts", "../app/transcript.server.ts", "../app/models/video.server.ts", "../app/youtube.server.ts", "../app/s3.server.ts", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/login.tsx", "../app/utils.ts", "../app/routes/notes.tsx", "../app/routes/video.tsx", "../app/components/YoutubeVideo.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v1.18.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/Users/cameronsima/dev/yt_search_remix/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/notes.$noteId.tsx\";\nimport * as route2 from \"./routes/notes._index.tsx\";\nimport * as route3 from \"./routes/notes.new.tsx\";\nimport * as route4 from \"./routes/channel.tsx\";\nimport * as route5 from \"./routes/_index.tsx\";\nimport * as route6 from \"./routes/logout.tsx\";\nimport * as route7 from \"./routes/login.tsx\";\nimport * as route8 from \"./routes/notes.tsx\";\nimport * as route9 from \"./routes/video.tsx\";\nimport * as route10 from \"./routes/join.tsx\";\nimport * as route11 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/notes.$noteId\": {\n      id: \"routes/notes.$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/notes._index\": {\n      id: \"routes/notes._index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/notes.new\": {\n      id: \"routes/notes.new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/channel\": {\n      id: \"routes/channel\",\n      parentId: \"root\",\n      path: \"channel\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/video\": {\n      id: \"routes/video\",\n      parentId: \"root\",\n      path: \"video\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\n\nimport { getUser } from \"~/session.server\";\nimport stylesheet from \"~/tailwind.css\";\nimport icon from \"../public/lighthouse.png\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n// NOTE: Architect deploys the public directory to /_static/\n{ rel: \"icon\", href: \"/_static/favicon.ico\" }];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json({ user: await getUser(request) });\n};\n\nexport default function App() {\n  const data = useLoaderData<typeof loader>();\n  const isLoggedIn = !!data.user;\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Header isLoggedIn={isLoggedIn} />\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nfunction Header({ isLoggedIn }: {isLoggedIn: boolean;}) {\n  return (\n    <header className=\"bg-white\">\n      <nav\n        className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\"\n        aria-label=\"Global\">\n\n        <div className=\"flex lg:flex-1\">\n          <a href=\"/\" className=\"-m-1.5 p-1.5\">\n            <span className=\"sr-only\">Lingua Lighthouse</span>\n            <img className=\"h-8 w-auto\" src={icon} alt=\"\" />\n          </a>\n        </div>\n\n        <div className=\" lg:flex lg:flex-1 lg:justify-end\">\n          {!isLoggedIn &&\n          <a\n            href=\"/\"\n            className=\"text-sm font-semibold leading-6 text-gray-900\">\n\n              Log in <span>&rarr;</span>\n            </a>}\n\n        </div>\n      </nav>\n    </header>);\n\n}\n// function useRouteData() {\n//   throw new Error(\"Function not implemented.\");\n// }", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function isLoggedIn(request: Request) {\n  const session = await getSession(request);\n  return session.has(USER_SESSION_KEY);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  isRouteErrorResponse,\n  useLoaderData,\n  useRouteError,\n} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ id: params.noteId, userId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ id: params.noteId, userId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (error instanceof Error) {\n    return <div>An unexpected error occurred: {error.message}</div>;\n  }\n\n  if (!isRouteErrorResponse(error)) {\n    return <h1>Unknown Error</h1>;\n  }\n\n  if (error.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  return <div>An unexpected error occurred: {error.statusText}</div>;\n}\n", "import arc from \"@architect/functions\";\nimport { createId } from \"@paralleldrive/cuid2\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof createId>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(createId()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { body: null, title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { body: \"Body is required\", title: null } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ body, title, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = useRef<HTMLInputElement>(null);\n  const bodyRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title ? (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        ) : null}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 px-3 py-2 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body ? (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import { json, LoaderArgs } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { searchChannel } from \"~/search.server\";\nimport { TextMatch } from \"~/transcript.server\";\nimport { Video } from \"~/youtube.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const params = new URL(request.url).searchParams;\n  const channelName = params.get(\"channel\");\n  const searchText = params.get(\"text\");\n\n  console.log({ channelName, searchText });\n\n  const results = await searchChannel(\n    channelName as string,\n    searchText as string\n  );\n  return json({ channelName, results, searchText });\n};\n\nexport default function ChannelResultsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      {data.results.length > 0 && (\n        <div className=\"ml-6 mt-6 text-2xl font-bold\">\n          {data.results[0].video?.channelTitle}\n        </div>\n      )}\n      <ResultsText\n        numResults={data.results.length}\n        searchText={data.searchText as string}\n        channelName={data.channelName as string}\n      />\n      <div className=\"flex h-screen flex-row flex-wrap justify-evenly gap-4\">\n        {data.results.map(({ video, matches }) => (\n          <Card\n            key={`video-card-${video.id}`}\n            video={video}\n            matches={matches}\n            searchText={data.searchText as string}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nfunction Card({\n  video,\n  matches,\n  searchText,\n}: {\n  video: Video;\n  matches: TextMatch[];\n  searchText: string;\n}) {\n  const shortDescription = video.description.slice(0, 100);\n  const description =\n    shortDescription.length < video.description.length\n      ? `${shortDescription}...`\n      : shortDescription;\n\n  return (\n    <Link to={`/video?id=${video.id}&text=${searchText}`}>\n      <div className=\"max-w-sm rounded shadow-lg\">\n        <img\n          className=\"w-full\"\n          src={video.thumbnailUrl}\n          alt=\"Sunset in the mountains\"\n        />\n        <div className=\"px-6 py-4\">\n          <div className=\"mb-2 text-xl font-bold\">{video.title}</div>\n          <p className=\"text-base text-gray-700\">{description}</p>\n        </div>\n        <div className=\"px-6 pb-2 pt-4\">\n          <span className=\"mb-2 mr-2 inline-block rounded-full bg-gray-200 px-3 py-1 text-sm font-semibold text-gray-700\">\n            {`${matches.length} matches`}\n          </span>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nfunction ResultsText({\n  numResults,\n  searchText,\n  channelName,\n}: {\n  numResults: number;\n  searchText: string;\n  channelName: string;\n}) {\n  if (numResults > 0) {\n    return (\n      <h2 className=\"m-6 text-2xl underline\">\n        {numResults} results found for\n        <span className=\"font-bold italic\"> \"{searchText}\" </span>\n      </h2>\n    );\n  }\n  return (\n    <h2 className=\"m-6 text-2xl underline\">\n      No results found for\n      <span className=\"font-bold italic\"> \"{searchText}\" </span>\n    </h2>\n  );\n}\n", "import { chunk } from \"lodash\";\nimport {\n  getTranscript,\n  processTranscript,\n  searchTranscript,\n  TextMatch,\n} from \"./transcript.server\";\nimport {\n  createVideo,\n  getVideoByVideoId as getVideoByVideoIdDb,\n  getVideosByChannelId as getVideosByChannelIdDb,\n} from \"./models/video.server\";\nimport {\n  getChannelIdFromUrl,\n  getChannelVideoCount,\n  getChannelVideos,\n  getVideoById,\n  Video,\n} from \"./youtube.server\";\nimport { getTranscriptS3, getVideoS3Key, uploadFile } from \"./s3.server\";\nimport { TranscriptResponse } from \"youtube-transcript\";\n\nexport async function searchVideo(videoId: string, searchText: string) {\n  try {\n    const videoDb = await getVideoByVideoIdDb(videoId);\n\n    let video: Video, transcript: TranscriptResponse[];\n    if (videoDb) {\n      transcript = await getTranscriptS3(videoId);\n      video = {\n        id: videoDb.videoId,\n        ...videoDb,\n      };\n    } else {\n      video = await getVideoById(videoId);\n      transcript = await getTranscript(videoId);\n\n      const saveTranscript = uploadFile(\n        Buffer.from(JSON.stringify(transcript)),\n        getVideoS3Key(videoId)\n      );\n      const saveVideoObj = createVideo({\n        videoId,\n        title: video.title,\n        description: video.description,\n        publishedAt: video.publishedAt,\n        url: video.url,\n        channelId: video.channelId,\n        channelTitle: video.channelTitle,\n        thumbnailUrl: video.thumbnailUrl,\n      });\n      await Promise.all([saveTranscript, saveVideoObj]);\n    }\n\n    console.log(videoDb ? \"from db\" : \"from youtube\");\n    const { segments, fullText } = processTranscript(transcript);\n    const matches = searchTranscript(fullText, segments, searchText);\n    return { matches, video };\n  } catch (e) {\n    console.log(e);\n    return { matches: [], video: null };\n  }\n}\n\nexport async function searchChannel(channelUrl: string, searchText: string) {\n  let results: { video: Video; matches: TextMatch[] }[] = [];\n  const channelName = await getChannelIdFromUrl(channelUrl);\n\n  console.log({ channelName });\n\n  const [channelVideosDb, videoCount] = await Promise.all([\n    getVideosByChannelIdDb(channelName as string),\n    getChannelVideoCount(channelName as string),\n  ]);\n\n  console.log({ videoCount });\n  console.log(channelVideosDb.length);\n\n  if (channelVideosDb.length > 0) {\n    // map videos to transcript files from S3 and return matches\n    const chunkedVideos = chunk(channelVideosDb, 100);\n\n    for (const videoChunk of chunkedVideos) {\n      const promises = videoChunk.map(async (video) => {\n        const transcript = await getTranscriptS3(video.videoId);\n        const { segments, fullText } = processTranscript(transcript);\n        return {\n          video: {\n            id: video.videoId,\n            ...video,\n          },\n          matches: searchTranscript(fullText, segments, searchText),\n        };\n      });\n      results = results.concat(await Promise.all(promises));\n    }\n  } else {\n    // get videos from youtube and save to db\n    console.log(\"Getting channel videos...\");\n    const channelVideos = await getChannelVideos(channelName as string);\n    const chunkedVideos = chunk(channelVideos, 100);\n    console.log(channelVideos.length + \" videos found\");\n\n    console.log(\"Getting and processing transcripts...\");\n\n    let index = 0;\n    results = [];\n    for (const videoChunk of chunkedVideos) {\n      const promises = videoChunk.map(async (video) => {\n        try {\n          const transcript = await getTranscript(video.id);\n          const { segments, fullText } = processTranscript(transcript);\n          const saveTranscript = uploadFile(\n            Buffer.from(JSON.stringify(transcript)),\n            getVideoS3Key(video.id)\n          );\n          const saveVideoObj = createVideo({\n            videoId: video.id,\n            title: video.title,\n            description: video.description,\n            publishedAt: video.publishedAt,\n            url: video.url,\n            channelId: video.channelId,\n            channelTitle: video.channelTitle,\n            thumbnailUrl: video.thumbnailUrl,\n          });\n          await Promise.all([saveTranscript, saveVideoObj]);\n          results.push({\n            video,\n            matches: searchTranscript(fullText, segments, searchText),\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n      console.log(\"Waiting for chunk \" + index + \" to finish...\");\n      await Promise.all(promises);\n      index++;\n    }\n  }\n  console.log(channelVideosDb.length > 0 ? \"from db\" : \"from youtube\");\n  return results.filter((r) => r.matches.length > 0);\n}\n", "import { TranscriptResponse, YoutubeTranscript } from \"youtube-transcript\";\n\nexport interface SearchResult {\n  matches: [];\n  numResults: number;\n  searchText: string;\n  video: {\n    id: string;\n    url: string;\n    publishedAt: Date;\n    title: string;\n    description: string;\n  };\n}\n\nexport interface TextSegment {\n  id: string;\n  iStart: number;\n  iEnd: number;\n  text: string;\n  originalText: string;\n  start: number;\n  duration: number;\n  textPreceding: string[];\n  textFollowing: string[];\n}\n\nexport interface TextMatch {\n  id: string;\n  precedingText: string;\n  exactText: string;\n  followingText: string;\n  startSeconds: number;\n  endSeconds: number;\n  startSecondsFormatted: string;\n}\n\nexport async function getTranscript(\n  videoId: string\n): Promise<TranscriptResponse[]> {\n  const transcript = await YoutubeTranscript.fetchTranscript(videoId, {\n    lang: \"en\",\n  });\n  return transcript;\n}\n\nexport function processTranscript(\n  rawSegments: TranscriptResponse[],\n  numBookends = 1\n) {\n  const segments: TextSegment[] = [];\n  let fullText = \"\";\n  let charIndex = 0;\n\n  rawSegments.forEach((segment, index) => {\n    let textPreceding: string[] = [];\n    let textFollowing: string[] = [];\n    // add space to preserve word boundaries\n    const text = segment.text + \" \";\n    const textLower = text.toLowerCase();\n    const iEnd = charIndex + text.length;\n\n    // add some text on either end of the matching text for context\n    if (index >= numBookends) {\n      const preceding = rawSegments.slice(index - numBookends, index);\n      textPreceding = preceding.map((s) => s.text);\n    }\n\n    if (index < rawSegments.length - numBookends) {\n      const following = rawSegments.slice(index + 1, index + numBookends + 1);\n      textFollowing = following.map((s) => s.text);\n    }\n\n    segments.push({\n      id: index.toString(),\n      text: textLower,\n      originalText: text,\n      duration: segment.duration / 1000,\n      start: segment.offset / 1000,\n      iStart: charIndex,\n      iEnd,\n      textPreceding,\n      textFollowing,\n    });\n\n    fullText += textLower;\n    charIndex = iEnd;\n  });\n\n  return { segments, fullText };\n}\n\nexport function searchTranscript(\n  fullText: string,\n  textSegments: TextSegment[],\n  searchText: string\n) {\n  const matches: TextMatch[] = [];\n  const indexes = getMatchedIndexes(fullText, searchText.toLowerCase());\n\n  let id = 0;\n  for (let [iStart, iEnd] of indexes) {\n    id += 1;\n    const matchingSegments = [];\n\n    for (const segment of textSegments) {\n      if (iStart === segment.iEnd) {\n        iStart += 1;\n      }\n\n      if (\n        (segment.iStart <= iStart && iStart <= segment.iEnd) ||\n        (segment.iStart <= iEnd && iEnd <= segment.iEnd)\n      ) {\n        matchingSegments.push(segment);\n      }\n    }\n    const match = buildMatch(id.toString(), searchText, matchingSegments);\n    matches.push(match);\n  }\n  return matches;\n}\n\nfunction getMatchedIndexes(\n  text: string,\n  searchText: string\n): [number, number][] {\n  const regex = new RegExp(searchText, \"g\");\n  const matches = [];\n\n  let match;\n  while ((match = regex.exec(text)) !== null) {\n    matches.push(match);\n  }\n\n  return matches.map((m) => [m.index, m.index + m[0].length]);\n}\n\nfunction buildMatch(\n  id: string,\n  searchText: string,\n  segments: TextSegment[]\n): TextMatch {\n  const firstSegment = segments[0];\n  const lastSegment = segments[segments.length - 1];\n  const precedingText = firstSegment.textPreceding.join(\"\").trim();\n  const followingText = lastSegment.textFollowing.join(\"\").trim();\n  const mainTextLower = segments\n    .map((x) => x.text)\n    .join(\"\")\n    .trim();\n  const mainTextOriginal = segments\n    .map((x) => x.originalText)\n    .join(\"\")\n    .trim();\n  const fullText = `${precedingText} ${mainTextLower} ${followingText}`;\n  const fullTextOriginal = `${precedingText} ${mainTextOriginal} ${followingText}`;\n\n  // find indexes of the search text in the full text, with lowercase matching\n  const indexes = getMatchedIndexes(fullText, searchText.toLowerCase());\n\n  // split the text into preceding, exact matching, and following from\n  // the original text\n  const preceding = fullTextOriginal.substring(0, indexes[0][0]);\n  const exact = fullTextOriginal.substring(indexes[0][0], indexes[0][1]);\n  const following = fullTextOriginal.substring(indexes[0][1]);\n\n  return {\n    id,\n    precedingText: preceding.trim(),\n    exactText: exact.trim(),\n    followingText: following.trim(),\n\n    // add 2 second buffer as lead-in\n    startSeconds: Math.floor(firstSegment.start) - 2,\n    endSeconds: Math.floor(lastSegment.start + lastSegment.duration),\n    startSecondsFormatted: formatTime(firstSegment.start),\n  };\n}\n\nfunction formatTime(time: number): string {\n  const formatted: string = new Date(time * 1000).toISOString().substr(11, 8);\n  // remove milliseconds\n  return formatted.split(\".\")[0];\n}\n", "import arc from \"@architect/functions\";\nimport { createId } from \"@paralleldrive/cuid2\";\n\nexport type Video = {\n  videoId: string;\n  channelId: string;\n  channelTitle: string;\n  title: string;\n  description: string;\n  publishedAt: string;\n  thumbnailUrl: string;\n  url: string;\n};\n\nconst skToId = (sk: string): string => sk.replace(/^Video#/, \"\");\n//const idToSk = (id: string): string => `Video#${id}`;\n\nexport const createVideo = async (video: Video): Promise<void> => {\n  const db = await arc.tables();\n  await db.video.put({\n    pk: video.videoId,\n    sk: skToId(createId()),\n    ...video,\n  });\n};\n\nexport const getVideoByVideoId = async (\n  videoId: string\n): Promise<Video | undefined> => {\n  const db = await arc.tables();\n  const result = await db.video.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": videoId },\n  });\n  const [record] = result.Items;\n  if (record) {\n    return {\n      videoId: record.pk,\n      channelId: record.channelId,\n      channelTitle: record.channelTitle,\n      title: record.title,\n      description: record.description,\n      publishedAt: record.publishedAt,\n      thumbnailUrl: record.thumbnailUrl,\n      url: record.url,\n    };\n  }\n};\n\nexport const getVideosByChannelId = async (\n  channelId: string\n): Promise<Video[]> => {\n  const db = await arc.tables();\n  const result = await db.video.query({\n    IndexName: \"byChannelId\",\n    KeyConditionExpression: \"channelId = :cId\",\n    ExpressionAttributeValues: {\n      \":cId\": channelId,\n    },\n  });\n\n  return result.Items as Video[];\n};\n", "const MAX_RESULTS = 50;\nconst YOUTUBE_API_KEY = process.env.YOUTUBE_API_KEY;\n\nexport interface Video {\n  id: string;\n  channelId: string;\n  channelTitle: string;\n  title: string;\n  description: string;\n  publishedAt: string;\n  url: string;\n  thumbnailUrl: string;\n}\n\nexport async function getVideoById(videoId: string): Promise<Video> {\n  const url = `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${YOUTUBE_API_KEY}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  console.log({ data, YOUTUBE_API_KEY });\n  const video = data.items[0];\n  return {\n    id: video.id,\n    channelId: video.snippet.channelId,\n    channelTitle: video.snippet.channelTitle,\n    title: video.snippet.title,\n    description: video.snippet.description,\n    publishedAt: video.snippet.publishedAt,\n    url: `https://www.youtube.com/watch?v=${video.id}`,\n    thumbnailUrl: video.snippet.thumbnails.high.url,\n  };\n}\n\nexport async function getVideosFromPlaylistId(\n  playlistId: string,\n  pageToken: string | undefined\n): Promise<{ videos: Video[]; nextPageToken: string | undefined }> {\n  let url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=${MAX_RESULTS}&playlistId=${playlistId}&key=${YOUTUBE_API_KEY}`;\n\n  if (pageToken) {\n    url += `&pageToken=${pageToken}`;\n  }\n\n  const response = await fetch(url);\n  const dataJson = await response.json();\n  const data = dataJson.items;\n  const videos: Video[] = data.map((item: any) => ({\n    id: item.snippet.resourceId.videoId,\n    channelId: item.snippet.channelId,\n    channelTitle: item.snippet.channelTitle,\n    title: item.snippet.title,\n    description: item.snippet.description,\n    publishedAt: item.snippet.publishedAt,\n    url: `https://www.youtube.com/watch?v=${item.snippet.resourceId.videoId}`,\n    thumbnailUrl: item.snippet.thumbnails.high.url,\n  }));\n  const nextPageToken = dataJson.nextPageToken as string | undefined;\n  return { videos, nextPageToken };\n}\n\nexport async function getChannelVideos(channelName: string) {\n  let response: { videos: any[]; nextPageToken: string | undefined };\n  let pageToken: string | undefined = undefined;\n  const channelVideos: Video[] = [];\n  const playlistId = channelName.replace(\"UC\", \"UU\");\n\n  while (true) {\n    response = await getVideosFromPlaylistId(playlistId, pageToken);\n    const { videos, nextPageToken } = response;\n    channelVideos.push(...videos);\n    pageToken = nextPageToken;\n    if (!nextPageToken) {\n      break;\n    }\n  }\n  return channelVideos;\n}\n\nexport async function getChannelIdFromUrl(url: string) {\n  try {\n    const response = await fetch(url);\n    const data = await response.text();\n    const arr = data.split(\"channel_id=\");\n    const channelId = arr[1].slice(0, 24);\n    console.log(\"Channel ID:\", channelId);\n    return channelId;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getChannelVideoCount(channelId: string) {\n  const url = `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${YOUTUBE_API_KEY}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const videoCount = data.items[0].statistics.videoCount;\n  return videoCount;\n}\n", "import {\n  GetObjectCommand,\n  PutObjectCommand,\n  S3Client,\n} from \"@aws-sdk/client-s3\";\n\nimport { TranscriptResponse } from \"youtube-transcript\";\n\nconst BUCKET_NAME = \"yt-search-transcript-segments\";\n\nconst s3 = new S3Client({\n  region: \"us-east-1\",\n  credentials: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID as string,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY as string,\n  },\n});\n\nexport async function getTranscriptS3(\n  videoId: string\n): Promise<TranscriptResponse[]> {\n  const key = getVideoS3Key(videoId);\n  return getFile(key);\n}\n\nexport async function uploadFile(file: Buffer, key: string) {\n  const command = new PutObjectCommand({\n    Bucket: BUCKET_NAME,\n    Key: key,\n    Body: file,\n  });\n  return s3.send(command);\n}\n\nexport async function getFile(key: string) {\n  const command = new GetObjectCommand({\n    Bucket: BUCKET_NAME,\n    Key: key,\n  });\n  const result = await s3.send(command);\n  const body = await result.Body!.transformToString();\n  return JSON.parse(body);\n}\n\nexport async function getFiles(keys: string[]) {\n  return Promise.all(keys.map((key) => getFile(key)));\n}\n\nexport function getVideoS3Key(videoId: string) {\n  return `video-${videoId}`;\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\n//import { useOptionalUser } from \"~/utils\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Lingua Lighthouse\" }];\n\nexport default function Index() {\n  //const user = useOptionalUser();\n\n  const navigate = useNavigate();\n  const [videoId, setVideoId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [searchType, setSearchType] = useState<\"video\" | \"channel\">(\"video\");\n  const isDisabled = videoId === \"\" || text === \"\";\n\n  const submit = () => {\n    if (isDisabled) return;\n    const url = `/${searchType}?id=${videoId}&text=${text}`;\n    navigate(url);\n  };\n\n  return (\n    <div className=\"flex flex-col justify-around\" style={{ height: \"100%\" }}>\n      <h1 className=\"text-center text-4xl\">\n        Search for text in a youtube {searchType}\n      </h1>\n      <div className=\"flex justify-center px-4\">\n        <div className=\"flex w-full flex-col gap-y-4 md:w-3/4\">\n          <select\n            className=\"focus:shadow-outline w-full rounded border px-3 py-2 leading-tight text-gray-700 shadow focus:outline-none\"\n            onChange={(e) => setSearchType(e.target.value as any)}\n            value={searchType}\n          >\n            <option value=\"video\">Video</option>\n            <option value=\"channel\">Entire channel</option>\n          </select>\n\n          <Input\n            id=\"video_id\"\n            name=\"video_id\"\n            placeholder={`Youtube ${searchType} url`}\n            value={videoId}\n            onInput={(e: any) => setVideoId(e.target.value)}\n          />\n          <Input\n            id=\"text\"\n            name=\"text\"\n            placeholder=\"Text to search for\"\n            value={text}\n            onInput={(e: any) => setText(e.target.value)}\n          />\n          <button\n            disabled={isDisabled}\n            onClick={submit}\n            className=\"focus:shadow-outline rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700 focus:outline-none\"\n            type=\"button\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Input({\n  id,\n  name,\n  placeholder,\n  value,\n  onInput,\n}: {\n  id: string;\n  name: string;\n  placeholder: string;\n  value: string;\n  onInput: (e: any) => void;\n}) {\n  return (\n    <input\n      className=\"focus:shadow-outline w-full appearance-none rounded border px-3 py-2 leading-tight text-gray-700 shadow focus:outline-none\"\n      id={id}\n      name={name}\n      value={value}\n      type=\"text\"\n      placeholder={placeholder}\n      onInput={onInput}\n    />\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => logout(request);\n\nexport const loader = async () => redirect(\"/\");\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { verifyLogin } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    redirectTo,\n    remember: remember === \"on\" ? true : false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email ? (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password ? (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { getNoteListItems } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData<typeof loader>();\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 px-4 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { json, LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport YouTubeVideo from \"~/components/YoutubeVideo\";\nimport { searchVideo } from \"~/search.server\";\nimport { TextMatch } from \"~/transcript.server\";\n\nfunction cleanVideoId(videoId: string) {\n  const ytUrls = [\n    \"https://www.youtube.com/watch?v=\",\n    \"https://youtu.be/\",\n    \"https://www.youtube.com/embed/\",\n  ];\n\n  for (const url of ytUrls) {\n    if (videoId.includes(url)) {\n      return videoId.replace(url, \"\");\n    }\n  }\n  return videoId;\n}\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const params = new URL(request.url).searchParams;\n  let videoId = params.get(\"id\");\n  const searchText = params.get(\"text\");\n\n  if (!videoId || !searchText) {\n    return json({ video: null, searchText, matches: [], numResults: 0 });\n  }\n  videoId = cleanVideoId(videoId);\n\n  const { matches, video } = await searchVideo(\n    videoId as string,\n    searchText as string\n  );\n  return json({ video, searchText, matches, numResults: matches.length });\n};\n\nexport default function VideoResultsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  const [selected, setSelected] = useState(data.matches[0]);\n  return (\n    <div className=\"flex h-screen flex-col gap-4\">\n      <>\n        {data.video && (\n          <YouTubeVideo\n            videoId={data.video.id as string}\n            seekTime={selected?.startSeconds}\n          />\n        )}\n\n        <div className=\"ml-6 text-lg font-bold\">\n          {data.video?.title || \"No video found\"}\n        </div>\n        {data.video && (\n          <div className=\"ml-6 text-lg font-bold\">\n            {data.video?.channelTitle}\n          </div>\n        )}\n\n        <ResultsText\n          numResults={data.numResults}\n          searchText={data.searchText as string}\n        />\n        <div className=\"overflow-y-scroll\">\n          <Matches\n            matches={data.matches}\n            selected={selected}\n            setSelected={setSelected}\n          />\n        </div>\n      </>\n    </div>\n  );\n}\n\nfunction Matches({\n  matches,\n  selected,\n  setSelected,\n}: {\n  matches: TextMatch[];\n  selected: TextMatch;\n  setSelected: (match: TextMatch) => void;\n}) {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {matches.map((match) => (\n        <Match\n          key={match.id}\n          match={match}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Match({\n  match,\n  selected,\n  setSelected,\n}: {\n  match: TextMatch;\n  selected: TextMatch;\n  setSelected: (match: TextMatch) => void;\n}) {\n  const selectedClass =\n    selected?.id === match.id\n      ? \"bg-gray-400 hover:bg-gray-400\"\n      : \"bg-white hover:bg-gray-200\";\n\n  const clickHander = () => {\n    setSelected(match);\n  };\n  return (\n    <div\n      className={`w-full cursor-pointer overflow-hidden shadow-lg ${selectedClass}`}\n      onClick={clickHander}\n    >\n      <div className=\"px-6 py-4\">\n        <p className=\"text-base italic text-gray-800\">\n          {' \"...'}\n          {match.precedingText}\n          <span className=\"font-bold\">{\" \" + match.exactText + \" \"}</span>\n          {match.followingText}\n          {'...\"'}\n        </p>\n        <p className=\"text-gray-500\">{match.startSecondsFormatted}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction ResultsText({\n  numResults,\n  searchText,\n}: {\n  numResults: number;\n  searchText: string;\n}) {\n  if (numResults > 0) {\n    return (\n      <h2 className=\"text-md ml-6 underline\">\n        {numResults} results found for\n        <span className=\"font-bold italic\"> \"{searchText}\" </span>\n      </h2>\n    );\n  }\n  return (\n    <h2 className=\"text-md ml-6 underline\">\n      No results found for\n      <span className=\"font-bold italic\"> \"{searchText}\" </span>\n    </h2>\n  );\n}\n", "import React, { useEffect, useRef } from \"react\";\nimport YouTube from \"react-youtube\";\n\nconst videoOpts = {\n  height: \"390\",\n  width: \"100%\",\n};\n\nexport default function YouTubeVideo({\n  videoId,\n  seekTime,\n}: {\n  videoId: string;\n  seekTime: number;\n}) {\n  const playerRef = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (playerRef?.current?.internalPlayer) {\n      // @ts-ignore\n      playerRef.current.internalPlayer.seekTo(seekTime);\n    }\n  }, [seekTime]);\n  return videoId ? (\n    <YouTube videoId={videoId} opts={videoOpts} ref={playerRef} />\n  ) : (\n    <div></div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    redirectTo,\n    remember: false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email ? (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password ? (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    redirectTo: \"/\",\n    remember: true,\n    request,\n    userId: user.id,\n  });\n};\n\nexport default null;\n", "export default {'entry':{'module':'/_static/build/entry.client-YLNRRTET.js','imports':['/_static/build/_shared/chunk-VB4NGOEJ.js','/_static/build/_shared/chunk-OV6IFOTW.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-TJKEYJ3V.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-GZD6X4H5.js','imports':['/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-PKK3VIMV.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/_index-QHGY7OZY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/channel':{'id':'routes/channel','parentId':'root','path':'channel','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/channel-ZQ4LB7KL.js','imports':['/_static/build/_shared/chunk-NANAMF6K.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-UERRYS7T.js','imports':['/_static/build/_shared/chunk-VXOUHI5O.js','/_static/build/_shared/chunk-RPXOG2G4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-3VKPWEW3.js','imports':['/_static/build/_shared/chunk-VXOUHI5O.js','/_static/build/_shared/chunk-RPXOG2G4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-YHJIE5NB.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-42QFR3AL.js','imports':['/_static/build/_shared/chunk-RPXOG2G4.js','/_static/build/_shared/chunk-U5SFILUK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.$noteId':{'id':'routes/notes.$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes.$noteId-426M4SV5.js','imports':['/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-PKK3VIMV.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/notes._index':{'id':'routes/notes._index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes._index-WJ7MLO7M.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.new':{'id':'routes/notes.new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes.new-WDS4EVG4.js','imports':['/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-PKK3VIMV.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/video':{'id':'routes/video','parentId':'root','path':'video','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/video-X42IVH2X.js','imports':['/_static/build/_shared/chunk-NANAMF6K.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'879b4772','hmr':undefined,'url':'/_static/build/manifest-879B4772.js'};"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "bcrypt", "invariant", "bcrypt", "invariant", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_tiny_invariant", "import_functions", "arc", "import_jsx_dev_runtime", "loader", "invariant", "import_react", "import_jsx_dev_runtime", "action", "import_node", "import_react", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_functions", "import_cuid2", "skToId", "arc", "import_jsx_dev_runtime", "loader", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "action", "loader", "action", "loader", "meta", "import_node", "import_react", "import_react", "route", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "YouTube", "import_jsx_dev_runtime", "loader", "ResultsText", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "import_node", "action"]
}
